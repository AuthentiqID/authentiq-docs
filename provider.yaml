swagger: "2.0"
info:
  title: Authentiq Client Management
  version: "0.1.0"
  description: |
    Authentiq Client Management API.

    [Learn about Authentiq](http://authentiq.com) or join the IRC channel `#authentiq` on irc.freenode.net.

  termsOfService: http://authentiq.com/terms/
  contact:
    name: Authentiq team
    url: http://authentiq.io/support
    email: hello@authentiq.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: connect.authentiq.io
basePath: /
schemes:
  - https
paths:

  /authorize:
    get:
      summary: oAuth 2.0 authorize
      description: "
        See http://openid.net/specs/openid-connect-core-1_0.html#AuthRequest         "
      tags:
        - OAuth
        - signin
      parameters:
        - in: query
          name: scope
          type: string
          description: ""
          required: true
        - in: query
          name: response_type
          type: string
          description: ""
          required: true
        - in: query
          name: client_id
          type: string
          description: ""
          required: true
        - in: query
          name: redirect_uri
          type: string
          description: ""
          required: true
        - in: query
          name: state
          type: string
          description: "recommended"
          required: false
        - in: query
          name: response_mode
          type: string
          description: ""
          required: false
        - in: query
          name: nonce
          type: string
          description: ""
          required: false
        - in: query
          name: display
          type: string
          description: ""
          required: false
        - in: query
          name: prompt
          type: string
          description: ""
          required: false
        - in: query
          name: max_age
          type: string
          description: ""
          required: false
        - in: query
          name: ui_locales
          type: string
          description: ""
          required: false
#        - in: query
#          name: id_token_hint
#          type: string
#          description: ""
#          required: false
#        - in: query
#          name: login_hint
#          type: string
#          description: ""
#          required: false
#        - in: query
#          name: acr_values
#          type: string
#          description: ""
#          required: false
      produces:
        - text/html
      responses:
        200:
          description: Login with Authentiq screen
        302:
          description: Found (code) or Error (error)
          headers:
            "Location":
              description: Authorization URI with code or error parameter
              type: string
        400:
          description: Not found
        default:
          description: Other Errors

  /token:
    post:
      summary: oAuth 2.0 token
      description: "
        To obtain an Access Token, an ID Token, and optionally a 
        Refresh Token, the RP (Client) sends a Token Request to the 
        Token Endpoint to obtain a Token Response, as described in 
        Section 3.2 of OAuth 2.0 [RFC6749], when using the 
        Authorization Code Flow.
        Communication with the Token Endpoint MUST utilize TLS
        "
      tags:
        - OAuth
        - signin
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: grant_type
          in: formData
          description: "value: authorization_code"
          required: true
          type: string
        - name: code
          in: formData
          description: ""
          required: true
          type: string
        - name: redirect_uri
          in: formData
          description: ""
          required: false
          type: string
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            type: object
            required:
            - id_token
            - access_token
            - token_type
            - expires_in
            properties:
              id_token:
                type: string
              access_token:
                type: string
              token_type:
                type: string
              expires_in:
                type: integer
                format: int32
                minimum: 0
              refresh_token:
                type: string
          headers:
            "Cache-Control":
              description: no-store
              type: string
            "Pragma":
              description: no-cache
              type: string
        default:
          $ref: '#/responses/ErrorResponse'

  /session:
    post:
      summary: create an anonymous session
      tags:
        - OAuth
        - signin
      parameters:
        - in: formData
          name: scope
          type: string
          description: "space sep list of strings"
          required: true
      responses:
        201:
          description: Success
          schema:
            $ref: "#/definitions/Session"
        default:
          $ref: '#/responses/ErrorResponse'

  /session/{sessionId}:
    post:
      summary: add authentication tokens
      description: "(websocket)"
      consumes:
        - application/jwt
        - application/x-www-form-urlencoded
        - multipart/form-data
      parameters:
        - in: path
          name: sessionId
          type: string
          description: "when application/jwt"
        - in: query
          name: token
          type: string
          description: ""
          required: false
        - in: formData
          name: bind_token
          type: string
          description: ""
          required: false
        - in: formData
          name: push_token
          type: string
          description: ""
          required: false
        - in: formData
          name: id_token
          type: string
          description: ""
          required: false
        - in: formData
          name: userinfo
          type: string
          description: ""
          required: false
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Session"
        default:
          $ref: '#/responses/ErrorResponse'

  /client/{clientId}/session:
    post:
      summary: create a session for this client
      tags:
        - OAuth
        - signin
      parameters:
        - $ref: "#/parameters/clientParam"
        - in: formData
          name: scope
          type: string
          description: "space sep list of strings"
          required: false
      responses:
        201:
          description: Success
          schema:
            $ref: "#/definitions/Session"
        default:
          $ref: '#/responses/ErrorResponse'

  /authorize/logout:
    get:
      summary: provider logout
      tags:
        - OAuth
        - signout
      responses:
        200:
          description: Success
        default:
          $ref: '#/responses/ErrorResponse'

  /authorize/iframe:
    get:
      tags:
        - OAuth
        - signout
      summary: provider iframe
      responses:
        200:
          description: Success
        default:
          $ref: '#/responses/ErrorResponse'

  /client:
    get:
      summary: Get a list of Clients the current Account has access to
      tags:
        - admin
      description: "scope, ui_locales, claims_locales"
      operationId: getClientList
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Client"
        default:
          $ref: '#/responses/ErrorResponse'

      security:
        - aq_auth:
          - oidc

    post:
      summary: create a new Client in the current Account
      tags:
        - admin
      description: ""
      operationId: createClient
      consumes:
        - application/json
        - multipart/form-data
      parameters:
        - in: body
          name: body
          description: Client object that needs to be added to the Account
          required: true
          schema:
            $ref: "#/definitions/Client"
      responses:
        "201":
          description: Success
          headers:
            "Location":
              description: "location of new Client object: /client/{clientId}"
              type: string
      security:
        - aq_auth:
          - oidc

  /client/{clientId}:
    get:
      summary: Get details of a Client object
      tags:
        - admin
      description: ""
      operationId: getClient
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/clientParam"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Client"
        "401":
          description: No access to Client object (incorrect secret)
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Client ID not found
          schema:
            $ref: '#/definitions/Error'
        default:
          $ref: '#/responses/ErrorResponse'
      security:
        - aq_auth:
          - oidc

    put:
      summary: Update an existing client
      tags:
        - admin
      description: ""
      operationId: updateClient
      consumes:
        - application/json
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/clientParam"
        - in: body
          name: body
          description: Client object that needs to be added to the Account
          required: true
          schema:
            $ref: "#/definitions/Client"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Client"
        "401":
          description: No access to Client object (incorrect secret)
        "404":
          description: Client ID not found
        default:
          description: Unexpected error (all 4xx and 5xx errors)
          schema:
            $ref: '#/definitions/Error'
      security:
        - aq_auth:
          - oidc

    delete:
      summary: Delete a Client object
      tags:
        - admin
      description: ""
      operationId: deleteClient
      parameters:
        - $ref: "#/parameters/clientParam"
      responses:
        "200":
          description: Success
        "401":
          description: No access to Client object
        "404":
          description: Client ID does not exist
      security:
        - aq_auth:
          - oidc

securityDefinitions:
  aq_auth:
    type: oauth2
    flow: accessCode
    authorizationUrl: https://connect.authentiq.io/authorize
    tokenUrl: https://connect.authentiq.io/token
    scopes:
      oidc: default iodc stuff

definitions:
  Error:
    description: "Error Response defined as in Section 5.2 
      of OAuth 2.0 [RFC6749] ; 
      status, type, title, detail are application specific
      "
    required:
    - error
    properties:
      error:
        type: string
      error_description:
        type: string
      state:
        type: integer
      status:
        type: integer
      type:
        type: string
      title:
        type: string
      detail:
        type: string

  Session:
    description: "Session object"
    properties:
      version:
        type: integer
      sub:
        type: string
      session_id:
        type: string
      session_state:
        type: string
      session_uri:
        type: string
      client_id:
        type: string
      scopes:
        type: array
        items:
          type: string
      scopes_optional:
        type: array
        items:
          type: string
      scopes_required:
        type: array
        items:
          type: string
      scopes_signed:
        type: array
        items:
          type: string
      tokens_seen:
        type: array
        items:
          type: string
      scopes_seen:
        type: array
        items:
          type: string
      redirect_uri:
        type: string
      response_type:
        type: string
      response_mode:
        type: string
      nonce:
        type: string
      created_at:
        type: string
      connected_at:
        type: string
        format: date-time
      authenticated_at:
        type: string
        format: date-time
      concluded_at:
        type: string
        format: date-time
      deleted_at:
        type: string
        format: date-time
      client_name:
        type: string
      client_uri:
        type: string
      logo_uri:
        type: string
      policy_uri:
        type: string
      tos_uri:
        type: string
      contacts:
        type: array
        items:
          type: string

  Client:
    description: "Client object"
    required:
      - client_name
      - client_uri
    properties:
      client_id:
        type: string # only in responses
      redirect_uris:
        type: array
        items:
          type: string
      response_types:
        type: array
        items:
          type: string
      grant_types:
        type: array
        items:
          type: string
      application_type:
        type: string
      application_type:
        type: string
      application_type:
        type: string
      contacts:
        type: array
        items:
          type: string
      client_name:
        type: string
      logo_uri:
        type: string
      client_uri:
        type: string
      policy_uri:
        type: string
      tos_uri:
        type: string
      default_max_age:
        type: integer
        format: int64
      default_scopes:
        type: array
        items:
          type: string

parameters:
  clientParam:
    name: clientId
    in: path
    description: "ID of client"
    required: true
    type: string

responses:
  ErrorResponse:
    description: Unexpected error
    schema:
      $ref: '#/definitions/Error'

# END
