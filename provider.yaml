swagger: "2.0"
info:
  title: Authentiq Connect API
  version: "0.1.0"
  description: |
    Authentiq Connect OAuth 2.0 and OpenID Connect API reference documentation.

    [Learn about Authentiq ID](http://authentiq.com) or join our IRC channel [#authentiq on irc.freenode.net](https://webchat.freenode.net/?channels=authentiq).

  termsOfService: http://authentiq.com/terms/
  contact:
    name: the Authentiq team
    url: http://authentiq.io/support
    email: hello@authentiq.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: connect.authentiq.io
basePath: /
schemes:
  - https
paths:
  /authorize:
    get:
      summary: OpenID Connect authorization endpoint.
      description: |
        A standard OpenID Connect authorization endpoint, used to initiate end-user authentication.

        Example:
        ```
        GET/POST https://connect.authentiq.io/authorize?client_id=<your-client-id>&response_type=code id_token
        ```

        See also:
          - [OAuth 2.0 Authorization Endpoint](http://tools.ietf.org/html/rfc6749#section-3.1)
          - [OIDC Authentication request](http://openid.net/specs/openid-connect-core-1_0.html#AuthRequest)
          - [OIDC Successful Authentication response](http://openid.net/specs/openid-connect-core-1_0.html#AuthResponse)
          - [OIDC Error Authentication response](http://openid.net/specs/openid-connect-core-1_0.html#AuthError)

      tags:
        - Authentication
      parameters:
        - in: query
          name: client_id
          type: string
          description: >
            The client ID obtained from the [Client Management console](/clients).
          required: true
        - in: query
          name: response_type
          type: string
          description: |
            The OAuth 2.0 or OIDC response type to use for this authentication. Choices are `code`, `id_token`, `token`, `token id_token`, `code id_token` `code token` and `code token id_token`. Defaults to `code`.
          required: true
        - in: query
          name: scope
          type: string
          description: >
            The [identity claims](/index.md#scopes) to request from the end-user. Defaults to the scope provided when registering the client.
          required: false
        - in: query
          name: redirect_uri
          type: string
          description: >
            The location to redirect to after successful or erroneous authentication. See OIDC for the values provided as query parameters (`response_mode=query`) or as fragments (`response_mode=fragment`). Must be one of the redirect URLs registered for this client; defaults to the first listed.
          required: false
        - in: query
          name: state
          type: string
          description: >
            An opaque string that will be passed back to the redirect URL and therefore can be used to communicate client side state and prevent CSRF attacks.
          required: false
        - in: query
          name: response_mode
          type: string
          description: >
            Whether to append items to the redirect URL as query parameters (`query`) or fragments (`fragment`).
          required: false
        - in: query
          name: nonce
          type: string
          description: >
            An nonce provided by the client (and opaque to Authentiq Connect) that will be included in any ID Token generated for this session. Clients should use the nonce to mitigate replay attacks.
          required: false
        - in: query
          name: display
          type: string
          description: >
            The authentication display mode, which can be one of `page`, `popup` or `modal`. Defaults to `page`.
          required: false
        - in: query
          name: prompt
          type: string
          description: >
            If `consent` the end-user is asked to (re)confirm what claims are shared, potentially disabling *One click sign-in*. Defaults to `login`, which allows *One click sign-in*.
          required: false
        - in: query
          name: max_age
          type: string
          description: >
            Specifies the allowable elapsed time in seconds since the last time the end-user was actively authenticated.
          required: false
        - in: query
          name: ui_locales
          type: string
          description: >
            Specifies the preferred language to use on the authorization page, as a space-separated list of BCP47 language tags.
          required: false
#        - in: query
#          name: id_token_hint
#          type: string
#          description: ""
#          required: false
#        - in: query
#          name: login_hint
#          type: string
#          description: ""
#          required: false
#        - in: query
#          name: acr_values
#          type: string
#          description: ""
#          required: false
      produces:
        - text/html
      responses:
        200:
          description: >
            *Sign in with Authentiq* page, popup or modal.
        302:
          description: >
            A successful or erroneous authentication response.
          headers:
            "Location":
              description: |
                Redirected URI with code, token and id_token, or error response parameters appended.
              type: string
  /token:
    post:
      summary: OpenID Connect token endpoint.
      description: |
        A standard OpenID Connect token endpoint, used to communicate tokens to confidential
        clients, usually by means of an intermediate authorization code grant.

        Example:
        ```
        POST https://connect.authentiq.io/token?client_id=<your-client-id>&client_secret=<client-secret>
            &grant_type=authorization_code&code=<code>&redirect_uri=<redirect-uri>
        ```

        See also:
          - [OAuth 2.0 Token Endpoint](http://tools.ietf.org/html/rfc6749#section-3.2)
          - [OIDC Token request](http://openid.net/specs/openid-connect-core-1_0.html#TokenRequest)
          - [OIDC Successful Token response](http://openid.net/specs/openid-connect-core-1_0.html#TokenResponse)
          - [OIDC Token Error response](http://openid.net/specs/openid-connect-core-1_0.html#TokenErrorResponse)

      tags:
        - Authentication
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: client_id
          in: header
          description: >
            The registered client ID.
          required: true
          type: string
        - name: client_secret
          in: header
          description: >
            The registered client ID secret.
          required: true
          type: string
        - name: grant_type
          in: formData
          description: >
            The authorization grant type, must be `authorization_code`.
          required: true
          type: string
        - name: code
          in: formData
          description: >
            The authorization code previously obtained from the Authentication endpoint.
          required: true
          type: string
        - name: redirect_uri
          in: formData
          description: >
            The redirect URL that was used previously with the Authentication endpoint.
          required: true
          type: string
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            type: object
            required:
              - token_type
              - expires_in
            properties:
              id_token:
                type: string
              access_token:
                type: string
              token_type:
                type: string
              expires_in:
                type: integer
                format: int32
                minimum: 0
              refresh_token:
                type: string
              session_state:
                type: string
          headers:
            "Cache-Control":
              description: no-store
              type: string
            "Pragma":
              description: no-cache
              type: string
        default:
          $ref: '#/responses/ErrorResponse'

  /session:
    post:
      summary: create an anonymous session
      tags:
        - Sessions
      parameters:
        - in: formData
          name: scope
          type: string
          description: "space sep list of strings"
          required: true
      responses:
        201:
          description: Success
          schema:
            $ref: "#/definitions/Session"
        default:
          $ref: '#/responses/ErrorResponse'
      security:
        - client_secret: []
        - user_jwt: []

  /session/{sessionId}:
    post:
      summary: add authentication tokens
      description: "(websocket)"
      consumes:
        - application/jwt
        - application/x-www-form-urlencoded
        - multipart/form-data
      parameters:
        - in: path
          name: sessionId
          type: string
          description: "when application/jwt"
        - in: query
          name: token
          type: string
          description: ""
          required: false
        - in: formData
          name: bind_token
          type: string
          description: ""
          required: false
        - in: formData
          name: push_token
          type: string
          description: ""
          required: false
        - in: formData
          name: id_token
          type: string
          description: ""
          required: false
        - in: formData
          name: userinfo
          type: string
          description: ""
          required: false
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Session"
        default:
          $ref: '#/responses/ErrorResponse'
      security:
        - client_secret: []
        - user_jwt: []

  /client/{clientId}/session:
    post:
      summary: create a session for this client
      tags:
        - Sessions
      parameters:
        - $ref: "#/parameters/clientParam"
        - in: formData
          name: scope
          type: string
          description: "space sep list of strings"
          required: false
      responses:
        201:
          description: Success
          schema:
            $ref: "#/definitions/Session"
        default:
          $ref: '#/responses/ErrorResponse'
      security:
        - client_secret: []
        - user_jwt: []

  /authorize/logout:
    get:
      summary: provider logout
      tags:
        - Session Management
      responses:
        200:
          description: Success
        default:
          $ref: '#/responses/ErrorResponse'

  /authorize/iframe:
    get:
      tags:
        - Session Management
      summary: provider iframe
      responses:
        200:
          description: Success
        default:
          $ref: '#/responses/ErrorResponse'

  /client:
    get:
      summary: Get a list of Clients the current Account has access to
      tags:
        - Client Management
      description: "scope, ui_locales, claims_locales"
      operationId: getClientList
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Client"
        default:
          $ref: '#/responses/ErrorResponse'

      security:
        - client_registration_token: []
        - oauth_code: [oidc]
        - oauth_implicit: [oidc]


    post:
      summary: create a new Client in the current Account
      tags:
        - Client Management
      description: ""
      operationId: createClient
      consumes:
        - application/json
        - multipart/form-data
      parameters:
        - in: body
          name: body
          description: Client object that needs to be added to the Account
          required: true
          schema:
            $ref: "#/definitions/Client"
      responses:
        "201":
          description: Success
          headers:
            "Location":
              description: "location of new Client object: /client/{clientId}"
              type: string
      security:
        - client_registration_token: []
        - oauth_code: [oidc]
        - oauth_implicit: [oidc]


  /client/{clientId}:
    get:
      summary: Get details of a Client object
      tags:
        - Client Management
      description: ""
      operationId: getClient
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/clientParam"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Client"
        "401":
          description: No access to Client object (incorrect secret)
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Client ID not found
          schema:
            $ref: '#/definitions/Error'
        default:
          $ref: '#/responses/ErrorResponse'
      security:
        - client_registration_token: []
        - oauth_code: [oidc]
        - oauth_implicit: [oidc]


    put:
      summary: Update an existing client
      tags:
        - Client Management
      description: ""
      operationId: updateClient
      consumes:
        - application/json
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/clientParam"
        - in: body
          name: body
          description: Client object that needs to be added to the Account
          required: true
          schema:
            $ref: "#/definitions/Client"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Client"
        "401":
          description: No access to Client object (incorrect secret)
        "404":
          description: Client ID not found
        default:
          description: Unexpected error (all 4xx and 5xx errors)
          schema:
            $ref: '#/definitions/Error'
      security:
        - client_registration_token: []
        - oauth_code: [oidc]
        - oauth_implicit: [oidc]



    delete:
      summary: Delete a Client object
      tags:
        - Client Management
      description: ""
      operationId: deleteClient
      parameters:
        - $ref: "#/parameters/clientParam"
      responses:
        "200":
          description: Success
        "401":
          description: No access to Client object
        "404":
          description: Client ID does not exist
      security:
        - client_registration_token: []
        - oauth_code: [oidc]
        - oauth_implicit: [oidc]


securityDefinitions:

  client_secret:
    description: Session management by confidential clients.
    type: oauth2
    flow: password
    tokenUrl: https://connect.authentiq.io/token
    scopes:
      clients: Enables client management

  client_registration_token:
    description: Client management via registration token.
    type: apiKey
    name: Authorization
    in: header

  user_jwt:
    description: Session management by Authentiq ID.
    type: oauth2
    flow: application
    tokenUrl: https://connect.authentiq.io/token
    scopes:
      session: Enables session management

  oauth_code:
    description: End-user authentication.
    type: oauth2
    flow: accessCode
    authorizationUrl: https://connect.authentiq.io/authorize
    tokenUrl: https://connect.authentiq.io/token
    scopes:
      oidc: Enables OIDC flow
      email: The user's email address
      phone: The user's phone number
      address: The user's postal address
      aq:location: The user's current location
      aq:name: The user's full name
      aq:push: Enable *One click sign-in*

  oauth_implicit:
    description: End-user authentication.
    type: oauth2
    flow: implicit
    authorizationUrl: https://connect.authentiq.io/authorize
    scopes:
      oidc: Enables OIDC flow
      email: The user's email address
      phone: The user's phone number
      address: The user's postal address
      aq:location: The user's current location
      aq:name: The user's full name
      aq:push: Enable *One click sign-in*

definitions:
  Error:
    description: "Error Response defined as in Section 5.2
      of OAuth 2.0 [RFC6749] ;
      status, type, title, detail are application specific
      "
    required:
    - error
    properties:
      error:
        type: string
      error_description:
        type: string
      state:
        type: integer
      status:
        type: integer
      type:
        type: string
      title:
        type: string
      detail:
        type: string

  Session:
    description: "Session object"
    properties:
      version:
        type: integer
      sub:
        type: string
      session_id:
        type: string
      session_state:
        type: string
      session_uri:
        type: string
      client_id:
        type: string
      scopes:
        type: array
        items:
          type: string
      scopes_optional:
        type: array
        items:
          type: string
      scopes_required:
        type: array
        items:
          type: string
      scopes_signed:
        type: array
        items:
          type: string
      tokens_seen:
        type: array
        items:
          type: string
      scopes_seen:
        type: array
        items:
          type: string
      redirect_uri:
        type: string
      response_type:
        type: string
      response_mode:
        type: string
      nonce:
        type: string
      created_at:
        type: string
      connected_at:
        type: string
        format: date-time
      authenticated_at:
        type: string
        format: date-time
      concluded_at:
        type: string
        format: date-time
      deleted_at:
        type: string
        format: date-time
      client_name:
        type: string
      client_uri:
        type: string
      logo_uri:
        type: string
      policy_uri:
        type: string
      tos_uri:
        type: string
      contacts:
        type: array
        items:
          type: string

  Client:
    description: "Client object"
    required:
      - client_name
      - client_uri
    properties:
      client_id:
        type: string # only in responses
      redirect_uris:
        type: array
        items:
          type: string
      response_types:
        type: array
        items:
          type: string
      grant_types:
        type: array
        items:
          type: string
      application_type:
        type: string
      application_type:
        type: string
      application_type:
        type: string
      contacts:
        type: array
        items:
          type: string
      client_name:
        type: string
      logo_uri:
        type: string
      client_uri:
        type: string
      policy_uri:
        type: string
      tos_uri:
        type: string
      default_max_age:
        type: integer
        format: int64
      default_scopes:
        type: array
        items:
          type: string

parameters:
  clientParam:
    name: clientId
    in: path
    description: "ID of client"
    required: true
    type: string

responses:
  ErrorResponse:
    description: Unexpected error
    schema:
      $ref: '#/definitions/Error'

# END
